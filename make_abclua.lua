-- concatenates entire source into one lua file

local files = {"utils", "keys", "parts",  "lyrics", "chords", "stream", "macro", "directives", "fields", "bar", "notes", "emit_abc", "compile", "parse_abc", "register_directives","tools"}

local out = io.open('abclua_all.lua', 'w')

out:write([[
-- ABC Lua single file: autogenerated from source files
-- DO NOT EDIT; regenerate using make_abclua.lua
--
-- 
-- Simple ABC parsing for Lua. This library can read a reasonable
-- subset of ABC and generate tables representing the song structure.
--
-- Requires: 
--     Lua 5.2.1 http://www.lua.org
--     LPeg http://www.inf.puc-rio.br/~roberto/lpeg/
--
-- License: BSD 3 clause license
--  
-- * Copyright (c) 2013, John Williamson
-- * All rights reserved.
-- *
-- * Redistribution and use in source and binary forms, with or without
-- * modification, are permitted provided that the following conditions are met:
-- *     * Redistributions of source code must retain the above copyright
-- *       notice, this list of conditions and the following disclaimer.
-- *     * Redistributions in binary form must reproduce the above copyright
-- *       notice, this list of conditions and the following disclaimer in the
-- *       documentation and/or other materials provided with the distribution.
-- *     * Neither the name of the <organization> nor the
-- *       names of its contributors may be used to endorse or promote products
-- *       derived from this software without specific prior written permission.
-- *
-- * THIS SOFTWARE IS PROVIDED BY <copyright holder> ``AS IS'' AND ANY
-- * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-- * DISCLAIMED. IN NO EVENT SHALL <copyright holder> BE LIABLE FOR ANY
-- * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.**
--

]])


out:write('local re = require "re"')
    
for i,v in ipairs(files) do    
    local f = io.open('src/'..v..'.lua', 'r')
    local contents = f:read('*a')
    f:close()
            
    -- make all functions local
    contents = contents:gsub('\nfunction ([^\n]*)\n', '\nlocal function %1\n')
    
    out:write('\n')
    out:write('--\n')
    out:write('-- From source file: ' .. v..'.lua'..'\n')
    out:write('--\n')
    out:write(contents)               
    out:write('\n\n')
end

out:write('return abclua')

out:close()
